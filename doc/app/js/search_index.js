var search_data = {"index":{"searchIndex":["applicationcontroller","competitor","competitorscontroller","leader","leaderscontroller","maincontroller","manager","managerscontroller","resetter","school","schoolscontroller","sessionscontroller","setting","settingscontroller","settingshelper","task","taskscontroller","team","teamscontroller","volunteer","volunteerscontroller","assign_room()","badges()","create()","create()","create()","create()","create()","create()","create()","create()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","full_name()","full_name()","full_name()","index()","index()","index()","index()","index()","index()","index()","index()","index()","is_leader?()","is_logged_in?()","is_manager?()","is_offline?()","is_online?()","is_school?()","is_taskmaster?()","model_params()","model_params()","model_params()","model_params()","model_params()","model_params()","model_params()","new()","new()","new()","new()","new()","new()","new()","new()","require_school_password?()","reset()","results()","save_all()","school_password_required()","set_schools_and_teams()","setup()","show()","show()","show()","show()","show()","show()","show()","team_name()","total_score()","update()","update()","update()","update()","update()","update()","update()","readme"],"longSearchIndex":["applicationcontroller","competitor","competitorscontroller","leader","leaderscontroller","maincontroller","manager","managerscontroller","resetter","school","schoolscontroller","sessionscontroller","setting","settingscontroller","settingshelper","task","taskscontroller","team","teamscontroller","volunteer","volunteerscontroller","teamscontroller#assign_room()","competitorscontroller#badges()","competitorscontroller#create()","leaderscontroller#create()","managerscontroller#create()","schoolscontroller#create()","sessionscontroller#create()","taskscontroller#create()","teamscontroller#create()","volunteerscontroller#create()","competitorscontroller#destroy()","leaderscontroller#destroy()","managerscontroller#destroy()","schoolscontroller#destroy()","sessionscontroller#destroy()","taskscontroller#destroy()","teamscontroller#destroy()","volunteerscontroller#destroy()","competitorscontroller#edit()","leaderscontroller#edit()","managerscontroller#edit()","schoolscontroller#edit()","taskscontroller#edit()","teamscontroller#edit()","volunteerscontroller#edit()","competitor#full_name()","leader#full_name()","volunteer#full_name()","competitorscontroller#index()","leaderscontroller#index()","maincontroller#index()","managerscontroller#index()","schoolscontroller#index()","settingscontroller#index()","taskscontroller#index()","teamscontroller#index()","volunteerscontroller#index()","applicationcontroller#is_leader?()","applicationcontroller#is_logged_in?()","applicationcontroller#is_manager?()","applicationcontroller#is_offline?()","applicationcontroller#is_online?()","applicationcontroller#is_school?()","applicationcontroller#is_taskmaster?()","competitorscontroller#model_params()","leaderscontroller#model_params()","managerscontroller#model_params()","schoolscontroller#model_params()","taskscontroller#model_params()","teamscontroller#model_params()","volunteerscontroller#model_params()","competitorscontroller#new()","leaderscontroller#new()","managerscontroller#new()","schoolscontroller#new()","sessionscontroller#new()","taskscontroller#new()","teamscontroller#new()","volunteerscontroller#new()","applicationcontroller#require_school_password?()","resetter#reset()","teamscontroller#results()","settingscontroller#save_all()","school#school_password_required()","competitorscontroller#set_schools_and_teams()","teamscontroller#setup()","competitorscontroller#show()","leaderscontroller#show()","managerscontroller#show()","schoolscontroller#show()","taskscontroller#show()","teamscontroller#show()","volunteerscontroller#show()","team#team_name()","team#total_score()","competitorscontroller#update()","leaderscontroller#update()","managerscontroller#update()","schoolscontroller#update()","taskscontroller#update()","teamscontroller#update()","volunteerscontroller#update()",""],"info":[["ApplicationController","","ApplicationController.html","",""],["Competitor","","Competitor.html","",""],["CompetitorsController","","CompetitorsController.html","",""],["Leader","","Leader.html","",""],["LeadersController","","LeadersController.html","",""],["MainController","","MainController.html","",""],["Manager","","Manager.html","",""],["ManagersController","","ManagersController.html","",""],["Resetter","","Resetter.html","",""],["School","","School.html","",""],["SchoolsController","","SchoolsController.html","",""],["SessionsController","","SessionsController.html","",""],["Setting","","Setting.html","",""],["SettingsController","","SettingsController.html","",""],["SettingsHelper","","SettingsHelper.html","",""],["Task","","Task.html","",""],["TasksController","","TasksController.html","",""],["Team","","Team.html","",""],["TeamsController","","TeamsController.html","",""],["Volunteer","","Volunteer.html","",""],["VolunteersController","","VolunteersController.html","",""],["assign_room","TeamsController","TeamsController.html#method-i-assign_room","()","<p>Assign the four rooms to a given team\n"],["badges","CompetitorsController","CompetitorsController.html#method-i-badges","()","<p>Add another controller method to render the badges CSV file for download.\n"],["create","CompetitorsController","CompetitorsController.html#method-i-create","()","<p>If logged in as school, go directly to specific school infomation page\nOtherwise we show the total list …\n"],["create","LeadersController","LeadersController.html#method-i-create","()","<p>If form successfully filled out, add the leader to database and redirect to\nlist of leader. Otherwise …\n"],["create","ManagersController","ManagersController.html#method-i-create","()","<p>If form correctly filled out, add new manager to database and redisplay\nlist of managers Otherwise redisplay …\n"],["create","SchoolsController","SchoolsController.html#method-i-create","()","<p>If new school signup form has valid information, add to database and\nre-render page Otherwise, redisplay …\n"],["create","SessionsController","SessionsController.html#method-i-create","()","<p>Get the login information for the session to determine user type This sets\nthe security level of the …\n"],["create","TasksController","TasksController.html#method-i-create","()","<p>If new task form successfully filled out, add new task and return to task\nlisting Otherwise redisplay …\n"],["create","TeamsController","TeamsController.html#method-i-create","()","<p>If form correctly filled out, create the team and redirect to display\nteams. Otherwise, re-show the form …\n"],["create","VolunteersController","VolunteersController.html#method-i-create","()","<p>If signup information is correct, redisplay main index page Otherwise,\nreshow the form to get corrections …\n"],["destroy","CompetitorsController","CompetitorsController.html#method-i-destroy","()","<p>Find the correct competitor and remove from database (Called when we delete\na record)\n"],["destroy","LeadersController","LeadersController.html#method-i-destroy","()","<p>When we want to delete a record, find the correct record and delete it,\nthen redisplay list of leaders …\n"],["destroy","ManagersController","ManagersController.html#method-i-destroy","()","<p>When we want to delete a record, delete the correct data\n"],["destroy","SchoolsController","SchoolsController.html#method-i-destroy","()","<p>Ensure we delete correct school when we want to remove it from database\n"],["destroy","SessionsController","SessionsController.html#method-i-destroy","()","<p>When session is over, we need to reset the login information\n"],["destroy","TasksController","TasksController.html#method-i-destroy","()","<p>Delete correct record when we want to remove a task from database\n"],["destroy","TeamsController","TeamsController.html#method-i-destroy","()","<p>When deleting a team, delete the correct team\n"],["destroy","VolunteersController","VolunteersController.html#method-i-destroy","()","<p>When deleting a record, only delete the information for the volunteer\nselected\n"],["edit","CompetitorsController","CompetitorsController.html#method-i-edit","()","<p>Find the information of a specific competitor, so we can fill out the\nfields on the form when we go to …\n"],["edit","LeadersController","LeadersController.html#method-i-edit","()","<p>Find correct information to populate the fields of the editing form\n"],["edit","ManagersController","ManagersController.html#method-i-edit","()","<p>Prepopulate the editing form with correct data\n"],["edit","SchoolsController","SchoolsController.html#method-i-edit","()","<p>Prepopulate editing form when we want to make changes to school data\n"],["edit","TasksController","TasksController.html#method-i-edit","()","<p>Prepopulate editing form\n"],["edit","TeamsController","TeamsController.html#method-i-edit","()","<p>Show the form for editing, with prepopulated information\n"],["edit","VolunteersController","VolunteersController.html#method-i-edit","()","<p>Show editing form for specific volunteer with pre-populated data\n"],["full_name","Competitor","Competitor.html#method-i-full_name","()","<p>This creates a way to display both names with a single variable\n"],["full_name","Leader","Leader.html#method-i-full_name","()","<p>Create a way to display both names with single variable\n"],["full_name","Volunteer","Volunteer.html#method-i-full_name","()","<p>Set up a way to display both names with single variable\n"],["index","CompetitorsController","CompetitorsController.html#method-i-index","()","<p>Main index page for competitors, which lists them alphabetically by first\nname\n"],["index","LeadersController","LeadersController.html#method-i-index","()","<p>Dispay room leaders in ascending order for easy reference\n"],["index","MainController","MainController.html#method-i-index","()","<p>If logged in as school, go directly to school display as that is their only\naccess\n"],["index","ManagersController","ManagersController.html#method-i-index","()","<p>List the managers in the system as the default page\n"],["index","SchoolsController","SchoolsController.html#method-i-index","()","<p>Default display will list all schools in ascending order\n"],["index","SettingsController","SettingsController.html#method-i-index","()","<p>Display the current settings\n"],["index","TasksController","TasksController.html#method-i-index","()","<p>Default page shows current tasks in alphabetical order\n"],["index","TeamsController","TeamsController.html#method-i-index","()","<p>Default view lists teams. But if room leader, only show teams that are\nassigned to your room This list …\n"],["index","VolunteersController","VolunteersController.html#method-i-index","()","<p>Default view, if logged in, lists the volunteers in alphabetical order. If\nnot logged in, the view is …\n"],["is_leader?","ApplicationController","ApplicationController.html#method-i-is_leader-3F","()","<p>If user is logged in, are they logged in as a room leader?\n"],["is_logged_in?","ApplicationController","ApplicationController.html#method-i-is_logged_in-3F","()","<p>Check if the user is currently logged in\n"],["is_manager?","ApplicationController","ApplicationController.html#method-i-is_manager-3F","()","<p>If user is logged in, are they logged in as a manager?\n"],["is_offline?","ApplicationController","ApplicationController.html#method-i-is_offline-3F","()","<p>Variable to keep track of whether the system is offline\n"],["is_online?","ApplicationController","ApplicationController.html#method-i-is_online-3F","()","<p>The opposite of is_offline, but easier to use in some places in the code\n"],["is_school?","ApplicationController","ApplicationController.html#method-i-is_school-3F","()","<p>If user is logged in, are they logged in as a school level aurhority (for\nschool and competitor signups) …\n"],["is_taskmaster?","ApplicationController","ApplicationController.html#method-i-is_taskmaster-3F","()","<p>If the user is logged in, are they logged in as a taskmaster?\n"],["model_params","CompetitorsController","CompetitorsController.html#method-i-model_params","()","<p>List the only information allowed to be passed, to aid in security\n"],["model_params","LeadersController","LeadersController.html#method-i-model_params","()","<p>List the only information allowed to be passed, to aid in security\n"],["model_params","ManagersController","ManagersController.html#method-i-model_params","()","<p>List the only information allowed to be passed, to aid in security\n"],["model_params","SchoolsController","SchoolsController.html#method-i-model_params","()","<p>List the only information allowed to be passed, to aid in security\n"],["model_params","TasksController","TasksController.html#method-i-model_params","()","<p>List the only information allowed to be passed, to aid in security\n"],["model_params","TeamsController","TeamsController.html#method-i-model_params","()","<p>List the only information allowed to be passed, to aid in security\n"],["model_params","VolunteersController","VolunteersController.html#method-i-model_params","()","<p>List the only information allowed to be passed, to aid in security\n"],["new","CompetitorsController","CompetitorsController.html#method-i-new","()","<p>Renders the form for new competitors\n"],["new","LeadersController","LeadersController.html#method-i-new","()","<p>Render the form to fill out when we want to create a new leader\n"],["new","ManagersController","ManagersController.html#method-i-new","()","<p>Render the form to fill out when we want to add a new manager\n"],["new","SchoolsController","SchoolsController.html#method-i-new","()","<p>Display form for new school to sign up\n"],["new","SessionsController","SessionsController.html#method-i-new","()","<p>Renders the associated login form. Empty so used default.\n"],["new","TasksController","TasksController.html#method-i-new","()","<p>Display form to fill out when we want to create a new task\n"],["new","TeamsController","TeamsController.html#method-i-new","()","<p>Show the form to fill out for creating a new team.  Valid room numbers are\nthose in use by room leaders. …\n"],["new","VolunteersController","VolunteersController.html#method-i-new","()","<p>Display form to fill out for new volunteers to sign up\n"],["require_school_password?","ApplicationController","ApplicationController.html#method-i-require_school_password-3F","()","<p>Keeps track of whether schools and competitors need to log in to signup\n"],["reset","Resetter","Resetter.html#method-i-reset","()","<p>Choose redirect destinations based on current page. Page reloading\n"],["results","TeamsController","TeamsController.html#method-i-results","()","<p>When displaying the results, we want to display the results for all teams\n"],["save_all","SettingsController","SettingsController.html#method-i-save_all","()","<p>Save changes to current settings\n"],["school_password_required","School","School.html#method-i-school_password_required","()","<p>This checks if the schools need to log in to sign up competitors, or if\nit&#39;s open sign up\n"],["set_schools_and_teams","CompetitorsController","CompetitorsController.html#method-i-set_schools_and_teams","()","<p>This will find and display schools and teams in ascending order\n"],["setup","TeamsController","TeamsController.html#method-i-setup","()","<p>Setting up new teams, from #1 to #25, in all six colors.  It will not set\nup the team if it already exists. …\n"],["show","CompetitorsController","CompetitorsController.html#method-i-show","()","<p>Used to find the information of a specific competitor when we want to see\nhis information\n"],["show","LeadersController","LeadersController.html#method-i-show","()","<p>Find correct information when displaying specific leader information\n"],["show","ManagersController","ManagersController.html#method-i-show","()","<p>Find correct information when we want to see specific manager data\n"],["show","SchoolsController","SchoolsController.html#method-i-show","()","<p>Show correct information when we want to see data on a specific school\n"],["show","TasksController","TasksController.html#method-i-show","()","<p>Display correct information when we want to see data of specific task\n"],["show","TeamsController","TeamsController.html#method-i-show","()","<p>Show the information for the specific team selected\n"],["show","VolunteersController","VolunteersController.html#method-i-show","()","<p>Show the information for specific volunteer\n"],["team_name","Team","Team.html#method-i-team_name","()","<p>Set up a way to display the entire team name which consists of a color and\na number\n"],["total_score","Team","Team.html#method-i-total_score","()","<p>Calculate total score for the team\n"],["update","CompetitorsController","CompetitorsController.html#method-i-update","()","<p>If we got a successful form filled out, update the competitor. Otherwise,\nredirect to the form again …\n"],["update","LeadersController","LeadersController.html#method-i-update","()","<p>If editing form correctly filled out, update the record and redirect to\nlist of leaders Otherwise redisplay …\n"],["update","ManagersController","ManagersController.html#method-i-update","()","<p>If editing successful, update record and redisplay list of managers\nOtherwise, redisplay form so we can …\n"],["update","SchoolsController","SchoolsController.html#method-i-update","()","<p>If editing is successful, save changes and return to main page Otherwise,\nreturn to form to get corrections …\n"],["update","TasksController","TasksController.html#method-i-update","()","<p>If editing form correct, update the task and return to task listing\nOtherwise, return to form for corrections …\n"],["update","TeamsController","TeamsController.html#method-i-update","()","<p>If edit form correctly filled out, update the team (with message about\nupdated scores if room leader) …\n"],["update","VolunteersController","VolunteersController.html#method-i-update","()","<p>If edited information is valid, redirect to volunteer index Otherwise,\nre-show the form so we can get …\n"],["README","","README_rdoc.html","","<p>Heroku Remote: git@heroku.com:arcane-harbor-1233.git\n<p>Heroku URL: arcane-harbor-1233.herokuapp.com/\n<p>More …\n"]]}}